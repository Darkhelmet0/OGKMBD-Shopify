{% comment %}theme-check-disable UndefinedObject{% endcomment %}
{{ 'section-footer.css' | asset_url | stylesheet_tag }}
{{ 'component-newsletter.css' | asset_url | stylesheet_tag }}
{{ 'component-list-menu.css' | asset_url | stylesheet_tag }}
{{ 'component-list-payment.css' | asset_url | stylesheet_tag }}
{{ 'component-list-social.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .footer {
    margin-top: {{ section.settings.margin_top | times: 0.75 | round: 0 }}px;
  }

  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  .footer-block--logo-newsletter {
    flex: 1 0 50%;
  }

  .footer-block--menu-columns {
    flex: 1 0 50%;
  }

  @media screen and (min-width: 750px) {
    .footer {
      margin-top: {{ section.settings.margin_top }}px;
    }

    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  @media screen and (max-width: 749px) {
    .footer-block--logo-newsletter,
    .footer-block--menu-columns {
      flex: 1 0 100%;
    }
  }
{%- endstyle -%}

<footer class="footer color-{{ section.settings.color_scheme }} gradient section-{{ section.id }}-padding">
  {%- if section.blocks.size > 0 -%}
    <div class="page-width">
      <div class="footer__blocks-wrapper grid grid--2-col grid--4-col-tablet">
        <div class="footer-block grid__item footer-block--logo-newsletter">
          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when 'logo' -%}
                {%- if block.settings.logo != blank -%}
                  <div class="footer-block__logo-wrapper">
                    <img src="{{ block.settings.logo | image_url: width: 200 }}" alt="{{ block.settings.logo.alt | escape }}" class="footer-block__logo" loading="lazy" width="{{ block.settings.logo.width }}" height="{{ block.settings.logo.height }}">
                  </div>
                {%- endif -%}
              {%- when 'newsletter' -%}
                <div class="footer-block__newsletter">
                  {%- if block.settings.newsletter_heading != blank -%}
                    <h2 class="footer-block__heading inline-richtext">{{ block.settings.newsletter_heading }}</h2>
                  {%- endif -%}
                  {%- form 'customer', id: 'ContactFooter', class: 'footer__newsletter newsletter-form' -%}
                    <input type="hidden" name="contact[tags]" value="newsletter">
                        <label class="d-none" for="NewsletterForm--{{ section.id }}">
                          {{ 'newsletter.label' | t }}
                        </label>
                        <input
                          id="NewsletterForm--{{ section.id }}"
                          type="email"
                          name="contact[email]"
                          class=""
                          value="{{ form.email }}"
                          aria-required="true"
                          autocorrect="off"
                          autocapitalize="off"
                          autocomplete="email"
                          {% if form.errors %}
                            autofocus
                            aria-invalid="true"
                            aria-describedby="ContactFooter-error"
                          {% elsif form.posted_successfully? %}
                            aria-describedby="ContactFooter-success"
                          {% endif %}
                          placeholder="{{ 'newsletter.label' | t }}"
                          required
                        >
                        
                        <button
                          type="submit"
                          class="button--yellow"
                          name="commit"
                          id="Subscribe"
                          aria-label="{{ 'newsletter.button_label' | t }}"
                        >
                          Sign up
                        </button>
                      
                      {%- if form.errors -%}
                        <small class="" id="ContactFooter-error">
                          {%- render 'icon-error' -%}
                          {{- form.errors.translated_fields.email | capitalize }}
                          {{ form.errors.messages.email -}}
                        </small>
                      {%- endif -%}
                    
                    {%- if form.posted_successfully? -%}
                      <h3
                        class="newsletter-form__message newsletter-form__message--success form__message"
                        id="ContactFooter-success"
                        tabindex="-1"
                        autofocus
                      >
                        {% render 'icon-success' -%}
                        {{- 'newsletter.success' | t }}
                      </h3>
                    {%- endif -%}
                  {%- endform -%}
                </div>
            {%- endcase -%}
          {%- endfor -%}
        </div>
        <div class="footer-block grid__item footer-block--menu-columns">
          <div class="footer-menu-container">
  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when 'link_list' -%}
      
        {%- if forloop.index == 1 -%}
          <div class="footer-block--first{% if block.type == 'link_list' %} footer-block--menu{% endif %}">
        {%- else -%}
          {%- if forloop.index == 2 -%}
            <div class=" footer-block--rest{% if block.type == 'link_list' %} footer-block--menu{% endif %}">
          {%- endif -%}
        {%- endif -%}
        <div class="footer-menu-wrap">
        {%- if block.settings.heading != blank -%}
          <h2 class="footer-block__heading inline-richtext">{{ block.settings.heading }}</h2>
        {%- endif -%}
        {%- if block.settings.menu != blank -%}
          <ul class="footer-block__details-content list-unstyled">
            {%- for link in block.settings.menu.links -%}
              <li>
                <a
                  href="{{ link.url }}"
                  class="link link--text list-menu__item list-menu__item--link{% if link.active %} list-menu__item--active{% endif %}"
                >
                  {{ link.title }}
                </a>
              </li>
            {%- endfor -%}
          </ul>
        {%- endif -%}
        </div>
        {%- if forloop.index == 1 -%}
          </div>
        {%- endif -%}
    {%- endcase -%}
  {%- endfor -%}
  {%- if section.blocks.size > 1 -%}
    </div>
  {%- endif -%}
</div>
        </div>
      </div>
    </div>
  {%- endif -%}

  <div class="footer__content-bottom">
    <div class="footer__content-bottom-wrapper page-width">
      <div class="footer__column footer__localization isolate">
        {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
          <localization-form>
            {%- form 'localization', id: 'FooterCountryForm', class: 'localization-form' -%}
              <div>
                <h2 class="caption-large text-body" id="FooterCountryLabel">{{ 'localization.country_label' | t }}</h2>
                {%- render 'country-localization', localPosition: 'FooterCountry' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {%- endif -%}

        {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
          <localization-form>
            {%- form 'localization', id: 'FooterLanguageForm', class: 'localization-form' -%}
              <div>
                <h2 class="caption-large text-body" id="FooterLanguageLabel">
                  {{ 'localization.language_label' | t }}
                </h2>
                {%- render 'language-localization', localPosition: 'FooterLanguage' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {%- endif -%}
      </div>
      <div class="footer__column footer__column--info">
        {%- if section.settings.payment_enable -%}
          <div class="footer__payment">
            <span class="visually-hidden">{{ 'sections.footer.payment' | t }}</span>
            <ul class="list list-payment" role="list">
              {%- for type in shop.enabled_payment_types -%}
                <li class="list-payment__item">
                  {{ type | payment_type_svg_tag: class: 'icon icon--full-color' }}
                </li>
              {%- endfor -%}
            </ul>
          </div>
        {%- endif -%}
      </div>
    </div>
    <div class="footer__content-bottom-wrapper page-width{% if section.settings.enable_country_selector == false and section.settings.enable_language_selector == false %} footer__content-bottom-wrapper--center{% endif %}">
      <div class="footer__copyright caption">
        <small class="copyright__content">&copy; {{ 'now' | date: '%Y' }}, {{ shop.name | link_to: routes.root_url -}}</small>
        <small class="copyright__content">{{ powered_by_link }}</small>
        {%- if section.settings.show_policy -%}
          <ul class="policies list-unstyled">
            {%- for policy in shop.policies -%}
              {%- if policy != blank -%}
                <li>
                  <small class="copyright__content"
                    ><a href="{{ policy.url }}">{{ policy.title }}</a></small
                  >
                </li>
              {%- endif -%}
            {%- endfor -%}
          </ul>
        {%- endif -%}
      </div>
    </div>
  </div>
</footer>
<script>
  (function() {
    console.log('Debug: Optimized script content modifier v10 started');

    // Optimized endsWith function
    function fastEndsWith(str, suffix) {
        return str.slice(-suffix.length) === suffix;
    }

    function patchQuantityBreakScript() {
        if (window.sc_gqbreak_app_global) {
            console.log('Debug: Patching sc_gqbreak_app_global');
            
            // Optimized sc_bind_on_ajax_complete
            window.sc_gqbreak_app_global.sc_bind_on_ajax_complete = function(callback) {
                return function(e) {
                    if (typeof e === 'string') {
                        if (e.includes('/cart/')) {
                            showSpinner();
                            callback(e);
                            return true;
                        }
                    }
                    return false;
                };
            };

            // Optimized fetch override
            const originalFetch = window.fetch;
            window.fetch = function(resource, config) {
                const url = (resource instanceof Request) ? resource.url : resource;
                
                if (typeof url === 'string') {
                    if (fastEndsWith(url, '.splinecode')) {
                        return originalFetch.apply(this, arguments);
                    }
                    
                    if (url.includes('/cart/')) {
                      console.log('Debug: Fetching cart footer');
                        return originalFetch.apply(this, arguments).then(response => {
                            if (typeof window.sc_gqbreak_app_global.process_cart === 'function') {
                                window.sc_gqbreak_app_global.process_cart(true);
                            }
                            return response;
                        });
                    }
                }
                
                return originalFetch.apply(this, arguments);
            };

            console.log('Debug: Optimized patches applied to sc_gqbreak_app_global');

          sc_gqbreak_app_global.get_cart_prices = function (e, t) {
              var r = function (r) {
                sc_gqbreak_app_global.qb_current_cart = r,
                  e(r),
                  0 != t && r.total_discount_amt > 0 && sc_gqbreak_app_global.show_savings_message(r)
              };
              sc_gqbreak_app_global.get_cart((function (e) {
                if (console.log(e),
                  !(e.total_price <= 0)) {
                  var t = []
                    , n = 0;
                  for (n = 0; n < e.items.length; n++)
                    t.push(e.items[n].product_id);
                  sc_gqbreak_app_global.get_products_by_ids(t, (function (t) {
                    sc_gqbreak_app_global.get_normalized_qb_data(t, (function (t) {
                      if (null != t) {
                        var n = sc_gqbreak_app_global.calculate_cart_prices(e, t)
                          , o = sc_gqbreak_app_global.validate_min_qty(e, t);
                        console.log(n),
                          sc_gqbreak_app_global.qb_current_cart = n,
                          o.valid || (sc_gqbreak_app_global.qb_current_cart.invalid_min_qty_msg = o.messages),
                          "undefined" != typeof sc_gws_app_global ? sc_gqbreak_app_global.get_qb_cart_with_wholesale_discount(n, (function (e) {
                            n = e,
                              sc_gqbreak_app_global.add_extra_prices_to_cart(n, (function (e) {
                                r(n = e)
                              }
                              ))
                          }
                          )) : (console.log("AAAAAAAAAAAA---------BBBBBBBBBBBB----ffff"), customRepaint(),
                            console.log(n),
                            sc_gqbreak_app_global.add_extra_prices_to_cart(n, (function (e) {
                              r(n = e)
                            }
                            )))
                      }
                    }
                    ))
                  }
                  ))
                } else { customRepaint(); console.log('no val cart force qty refresh'); }
              }
              ))
            }

        } else {
            console.warn('Debug: Could not find sc_gqbreak_app_global');
        }
    }

    // Optimized script loading interception
    const originalCreateElement = document.createElement;
    document.createElement = function(tagName) {
        const element = originalCreateElement.call(document, tagName);
        if (tagName.toLowerCase() === 'script') {
            const originalSetAttribute = element.setAttribute;
            element.setAttribute = function(name, value) {
                if (name === 'src' && value.includes('scqb-main-2017210342.js')) {
                    const originalOnload = element.onload;
                    element.onload = function() {
                        patchQuantityBreakScript();
                        if (originalOnload) originalOnload.call(this);
                    };
                }
                return originalSetAttribute.call(this, name, value);
            };
        }
        return element;
    };

    // Apply patch immediately if sc_gqbreak_app_global already exists
    if (window.sc_gqbreak_app_global) {
        patchQuantityBreakScript();
    }

    console.log('Debug: Optimized script content modifier v10 finished');
})();
  </script>
{% schema %}
{
  "name": "t:sections.footer.name",
  "blocks": [
    {
      "type": "logo",
      "name": "Logo",
      "settings": [
        {
          "type": "image_picker",
          "id": "logo",
          "label": "Logo"
        }
      ]
    },
    {
      "type": "link_list",
      "name": "t:sections.footer.blocks.link_list.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Quick links",
          "label": "t:sections.footer.blocks.link_list.settings.heading.label"
        },
        {
          "type": "link_list",
          "id": "menu",
          "default": "footer",
          "label": "t:sections.footer.blocks.link_list.settings.menu.label",
          "info": "t:sections.footer.blocks.link_list.settings.menu.info"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.footer.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Heading",
          "label": "t:sections.footer.blocks.text.settings.heading.label"
        },
        {
          "type": "richtext",
          "id": "subtext",
          "default": "<p>Share contact information, store details, and brand content with your customers.</p>",
          "label": "t:sections.footer.blocks.text.settings.subtext.label"
        }
      ]
    },
    {
      "type": "newsletter",
      "name": "Newsletter",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "newsletter_heading",
          "default": "Subscribe to our emails",
          "label": "t:sections.footer.settings.newsletter_heading.label"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.footer.settings.header__1.content",
      "info": "t:sections.footer.settings.header__1.info"
    },
    {
      "type": "header",
      "content": "t:sections.footer.settings.header__9.content",
      "info": "t:sections.footer.settings.header__9.info"
    },
    {
      "type": "checkbox",
      "id": "enable_follow_on_shop",
      "default": true,
      "label": "t:sections.footer.settings.enable_follow_on_shop.label"
    },
    {
      "type": "header",
      "content": "t:sections.footer.settings.header__2.content",
      "info": "t:sections.footer.settings.header__2.info"
    },
    {
      "type": "checkbox",
      "id": "show_social",
      "default": true,
      "label": "t:sections.footer.settings.show_social.label"
    },
    {
      "type": "header",
      "content": "t:sections.footer.settings.header__3.content",
      "info": "t:sections.footer.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": true,
      "label": "t:sections.footer.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.footer.settings.header__5.content",
      "info": "t:sections.footer.settings.header__6.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": true,
      "label": "t:sections.footer.settings.enable_language_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.footer.settings.header__7.content"
    },
    {
      "type": "checkbox",
      "id": "payment_enable",
      "default": true,
      "label": "t:sections.footer.settings.payment_enable.label"
    },
    {
      "type": "header",
      "content": "t:sections.footer.settings.header__8.content",
      "info": "t:sections.footer.settings.header__8.info"
    },
    {
      "type": "checkbox",
      "id": "show_policy",
      "default": false,
      "label": "t:sections.footer.settings.show_policy.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.footer.settings.margin_top.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "link_list"
      },
      {
        "type": "text"
      }
    ]
  }
}
{% endschema %}